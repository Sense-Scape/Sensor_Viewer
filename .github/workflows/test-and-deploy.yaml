on: push
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: v19.9.0
          cache: npm
      - name: Install npm
        run: npm clean-install
      - name: Build project
        run: npm run lint
  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: v19.9.0
          cache: npm
      - name: Install npm
        run: npm clean-install
      - name: Build project
        run: npm run build
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: v19.9.0
          cache: npm
      - name: Install npm
        run: npm clean-install
      - name: Run unit tests
        run: npm run test:unit
      - name: Install playwright
        run: npx playwright install --with-deps
      - name: Run browser tests
        run: npm run test
  deploy-preview:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref != 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: v19.9.0
          cache: npm
      - name: Install npm
        run: npm clean-install
      - name: Pull Vercel Environment Information
        run: npx -y vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: npx vercel build --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: npx vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
  deploy-prod:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: v19.9.0
          cache: npm
      - name: Install npm
        run: npm clean-install
      - name: Pull Vercel Environment Information
        run: npx -y vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: npx vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: npx vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
